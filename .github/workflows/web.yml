name: Publish on Netlify
on:
  workflow_dispatch:
    inputs:
      alias:
        description: Site name alias
      environment:
        type: environment
  pull_request:
    branches:
      - preview
      - production
  push:
    branches:
      - preview
      - production
  issue_comment:
    types: [created]

concurrency:
  group: netlify-web-${{ github.ref }}
  cancel-in-progress: true

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      authorized: ${{ steps.check_authorization.outputs.authorized == 'true' }}
      web_env: ${{ steps.setenv_manual.outputs.web_env || steps.setenv_prod.outputs.web_env || steps.setenv_stg.outputs.web_env }}
      alias: ${{ steps.alias_comment.outputs.alias || steps.alias_manual.outputs.alias || steps.alias_pr_name.outputs.alias || steps.alias_source.outputs.alias }}
    if: |
      github.event_name == 'workflow_dispatch'
      || (github.event_name == 'issue_comment' && github.event.issue.pull_request)
      || (github.event_name == 'push' 
          && (github.ref_name == 'preview' || github.ref_name == 'production'))

    steps:
      # Authorization
      - uses: khan/pull-request-comment-trigger@v1.1.0
        id: check_comment
        if: github.event_name == 'issue_comment' && github.event.issue.pull_request
        with:
          trigger: '/deploy:web'
          reaction: rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - id: check_authorization
        if: github.event_name != 'issue_comment' || steps.check_comment.outputs.trigger == 'true'
        run: echo "authorized=true" >> $GITHUB_OUTPUT

      # Environment
      - id: setenv_stg
        run: echo "web_env=task-tag-stg" >> $GITHUB_OUTPUT

      - id: setenv_prod
        if: |
          (gitHub.event_name == 'push' && github.ref_name == 'production')
          || (gitHub.event_name == 'pull_request' && gitHub.base_ref == 'production')
        run: echo "web_env=production" >> $GITHUB_OUTPUT

      - id: setenv_manual
        if: github.event_name == 'workflow_dispatch'
        run: echo "web_env=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT

      # Alias
      # Handles branch_name -> main
      - name: Set Alias to source branch
        id: alias_source
        if: ${{ github.head_ref != 'main' }}
        run: echo "alias=${{ github.head_ref }}" >> $GITHUB_OUTPUT

      # Handles PR main -> preview -> production
      - name: Set Alias to PR name
        id: alias_pr_name
        if: github.event_name == 'pull_request' && (github.base_ref == 'preview' || github.base_ref == 'production')
        run: echo "alias=${{ github.event.pull_request.title }}" >> $GITHUB_OUTPUT

      # Handles manual trigger or push
      - name: Set Alias to branch for manual trigger or branch push
        id: alias_manual
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
        run: echo "alias=${{ github.event.inputs.alias || github.ref_name }}" >> $GITHUB_OUTPUT

      # Handles issue comment
      - name: Get pull request ref
        id: get_pull_request_ref
        if: github.event_name == 'issue_comment'
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:repository/pulls/:issue_id
          repository: ${{ github.repository }}
          issue_id: ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: Set Alias to branch from comment
        id: alias_comment
        if: github.event_name == 'issue_comment'
        run: echo "alias=${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}" >> $GITHUB_OUTPUT

  publish:
    runs-on: ubuntu-latest
    needs:
      - configure
    if: ${{ needs.configure.outputs.authorized }}
    environment:
      name: ${{ needs.configure.outputs.web_env }}

    steps:
      - name: Get pull request ref
        id: get_pull_request_ref
        if: github.event_name == 'issue_comment'
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:repository/pulls/:issue_id
          repository: ${{ github.repository }}
          issue_id: ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      # Checkout code
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: |
            ${{ (steps.get_pull_request_ref.outputs.data && fromJson(steps.get_pull_request_ref.outputs.data).head.sha)
                || github.event.pull_request.head.sha
            }}

      - name: node_modules cache
        id: node-modules-cache
        uses: actions/cache@v3
        env:
          cache-name: node-modules-yarn
          cache-fingerprint: ${{ hashFiles('yarn.lock') }}
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ env.cache-fingerprint }}
          restore-keys: ${{ runner.os }}-${{ env.cache-name }}

      - name: Yarn install
        # called at most once for the workflow by the "setup" job
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn install --prefer-offline --frozen-lockfile

      - name: Downgrade webpack config version
        # react-native-render-html breaks with weback config > 16
        # we have to downgrade to v16 for functionality
        run: yarn add -D @expo/webpack-config@0.16.2

      # Use specific node.js version
      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Run build
      - name: Build
        run: yarn build-web
        env:
          GRAPHQL_ENDPOINT: ${{ secrets.GRAPHQL_ENDPOINT }}
          GRAPHQL_WS_ENDPOINT: ${{ secrets.GRAPHQL_WS_ENDPOINT }}
          SEGMENT_KEY: ${{ secrets.SEGMENT_KEY }}
          INTERCOM_IOS_KEY: ${{ secrets.INTERCOM_IOS_KEY }}
          INTERCOM_ANDROID_KEY: ${{ secrets.INTERCOM_ANDROID_KEY }}
          APP_ID: ${{ secrets.APP_ID }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_NAME: ${{ secrets.SENTRY_NAME }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          G_AUTH_EXPO_CLIENT_ID: ${{ secrets.G_AUTH_EXPO_CLIENT_ID }}
          G_AUTH_ANDROID_CLIENT_ID: ${{ secrets.G_AUTH_ANDROID_CLIENT_ID }}
          G_AUTH_WEB_CLIENT_ID: ${{ secrets.G_AUTH_WEB_CLIENT_ID }}
          G_SIGN_IN_URL: ${{ secrets.G_SIGN_IN_URL }}
          G_AUTH_IOS_CLIENT_ID: ${{ secrets.G_AUTH_IOS_CLIENT_ID }}
          APPLE_CLIENT_ID_WEB: ${{ secrets.APPLE_CLIENT_ID_WEB }}
          APPLE_REDIRECT_UI: ${{ secrets.APPLE_REDIRECT_UI }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          AASA_MODE: ${{ secrets.AASA_MODE }}
          G_MAP_URL: ${{ secrets.G_MAP_URL }}
          G_CAPTCHA_KEY: ${{ secrets.G_CAPTCHA_KEY }}
          G_CAPTCHA_BASE_URL: ${{ secrets.G_CAPTCHA_BASE_URL }}
          G_CAPTCHA_ENABLED: ${{ secrets.G_CAPTCHA_ENABLED }}

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: './web-build'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Deploy from GitHub Actions - ${{ needs.configure.outputs.alias }}'
          alias: ${{ needs.configure.outputs.alias }}
          production-deploy: ${{ github.event_name == 'push' && (github.ref_name == 'production' || github.ref_name == 'preview') }}
          github-deployment-description: 'TaskTag Website'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
